/* nome , email , numero, estado */
SELECT  c.nome
       ,c.email
       ,e.estado
       ,t.numero
FROM cliente c
INNER JOIN endereco e
ON c.idcliente = e.id_cliente
INNER JOIN telefone t
ON c.idcliente = t.id_cliente; /* ifnull */

SELECT  c.nome
       ,IFNULL(c.email,'NÃO TEM EMAIL') AS 'EMAIL'
       ,e.estado
       ,t.numero
FROM cliente c
INNER JOIN endereco e
ON c.idcliente = e.id_cliente
INNER JOIN telefone t
ON c.idcliente = t.id_cliente; /* VIEW */

CREATE VIEW V_RELATORIO AS
SELECT  C.NOME
       ,C.SEXO
       ,IFNULL(EMAIL,'cliente sem email') AS email
       ,T.TIPO
       ,T.NUMERO
       ,E.BAIRRO
       ,E.CIDADE
       ,E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT  NOME
       ,NUMERO
       ,ESTADO
FROM V_RELATORIO; /* DML -

SELECT  UPDATE DELETE
INSERT */
INSERT INTO V_RELATORIO VALUES('ANDREIA', 'F', 'ANDREIA@UOL.COM.BR', 'CEL', '234689', 'CENTRO', 'VITORIA', 'ES');
-- NÃO É POSSÍVEL INSERIR DADOS EM VIEWS QUE POSSUEM JOIN.

DELETE FROM V_RELATORIO WHERE NOME = 'EDUARDO';
-- NÃO É POSSÍVEL DELETAR O REGISTRO DE UMA VIEW QUE TEM JOIN.

UPDATE V_RELATORIO SET NOME = 'JOSE' WHERE NOME = 'EDUARDO';
-- É PERMITIDO REALIZAR UPDATE EM VEWS COM JOIN.

-- OBS CREATE É UM COMANDO DDL
CREATE TABLE JOGADORES(
       IDJOGADOR INT,
       NOME VARCHAR(30),
       ESTADO CHAR(2)
);

INSERT INTO JOGADORES VALUES(1, 'GERRERO', 'RS');
INSERT INTO JOGADORES VALUES(2, 'GABIGOL', 'RJ');
INSERT INTO JOGADORES VALUES(3, 'FANSO', 'RJ');
INSERT INTO JOGADORES VALUES(4, 'NENÊ', 'RJ');
INSERT INTO JOGADORES VALUES(5, 'LOVE', 'SP');

CREATE VIEW V_JOGADORES AS
SELECT NOME, ESTADO
FROM JOGADORES;

DELETE FROM V_JOGADORES WHERE NOME = 'GERRERO';

INSERT INTO V_JOGADORES VALUES('GERRERO', 'RS');

SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';

SELECT COUNT(*) AS 'QUANTIDADE' 
FROM V_RELATORIO
GROUP BY SEXO;

/* ORDER BY */

CREATE TABLE ALUNOS(
       NUMERO INT,
       NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1, 'JOÃO');
INSERT INTO ALUNOS VALUES(1, 'MARIA');
INSERT INTO ALUNOS VALUES(2, 'ZOE');
INSERT INTO ALUNOS VALUES(2, 'ANDRE');
INSERT INTO ALUNOS VALUES(3, 'CLARA');
INSERT INTO ALUNOS VALUES(1, 'CLARA');
INSERT INTO ALUNOS VALUES(4, 'MAFRA');
INSERT INTO ALUNOS VALUES(5, 'JANAINA');
INSERT INTO ALUNOS VALUES(1, 'JANAINA');
INSERT INTO ALUNOS VALUES(3, 'MARCELO');
INSERT INTO ALUNOS VALUES(4, 'GIOVANI');
INSERT INTO ALUNOS VALUES(5, 'ANTONIO');
INSERT INTO ALUNOS VALUES(6, 'ANA');
INSERT INTO ALUNOS VALUES(6, 'VIVIANE');

SELECT * FROM ALUNOS ORDER BY NUMERO;

SELECT * FROM ALUNOS ORDER BY 1; -- NESSE SELECT A PROJEÇÃO FOI ORDENADA PELO INDICE DA COLUNA
SELECT * FROM ALUNOS ORDER BY 2;

/* ORDENANDO POR MAIS DEUMA COLUNA */

SELECT * FROM ALUNOS ORDER BY NUMERO, NOME;
SELECT * FROM ALUNOS ORDER BY 1, 2;

/* MESCLANDO ORDER BY COM PROJEÇÃO */

SELECT NOME FROM ALUINOS 
ORDER BY 1, 2;
 /*NESSE CASO A QUERY DA ERRO POIS NO MUNERO DE CONULAS NO SELETC NÃO CORESPONDE 
 AO NUMER DE INDECES DE COLUNAS INDEXADOS NO ORDER BY, 
 POIS O BANCO NÃO SABE QUAL DOS INDICES PERTECE A COLUNA NOME EXPECIFICADA NO SELECT */

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;

/* ORDER BY DESC / ASC */

SELECT * FROM ALUNOS 
ORDER BY 1 ASC;

SELECT * FROM ALUNOS 
ORDER BY 1, 2 DESC;

SELECT * FROM ALUNOS 
ORDER BY 1 DESC, 2 DESC;


SELECT  C.NOME
       ,C.SEXO
       ,IFNULL(EMAIL,'cliente sem email') AS email
       ,T.TIPO
       ,T.NUMERO
       ,E.BAIRRO
       ,E.CIDADE
       ,E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;


SELECT * FROM V_RELATORIO ORDER BY 1;