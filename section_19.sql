/* triggers
    TRIGGERS DISPARAM COMANDOS SQL ANTES OU DEPOIS DE INSERTS/ DELETES OU UPDATES
 */

 /* ESTRUTURA DE UMA TRIGGER */
 CREATE TRIGGER NOME
BEFORE/AFTER INSERT/ DELETE / UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN
    QUALQUER COMANDO SQL
END

CREATE TABLE USUARIO(
    IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    LOGIN VARCHAR(30),
    PASSWROD VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
    IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
    IDUSUARIO INT,
    NOME VARCHAR(30),
    LOGIN VARCHAR(30)
);

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW
BEGIN
    INSERT INTO BKP_USUARIO VALUES(NULL, OLD.IDUSUARIO, OLD.NOME, OLD.LOGIN);
END
$

INSERT INTO USUARIO VALUES(NULL, 'MATHEUS MARTINS', 'MATHEUS.MARTINS', 'DEV RUBY ON RAILS AND HACK ETHICAL');
DELETE FROM USUARIO WHERE IDUSUARIO = 1;

/* COMUNICAÇÃO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA; 

CREATE TABLE PRODUTO(
    IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    VALOR FLOAT(10,2)
);

CREATE DATABASE BACKUP;

CREATE TABLE PRODUTO_PRODUTO(
    IDBKP INT PRIMARY KEY AUTO_INCREMENT,
    IDPRODUTO INT,
    NOME VARCHAR(30),
    VALOR FLOAT(10,2)
);

INSERT INTO BACKUP.PRODUTO_PRODUTO VALUES(NULL, 1000, 'TESTE', 0.0);

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTO -- CARE  you are shooting trigger before to record data. the table's auto increment id won't be recorded
FOR EACH ROW
BEGIN
INSERT INTO BACKUP.PRODUTO_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);
END
$ 

INSERT INTO PRODUTO VALUES(NULL,'LIVRO NODELAGEM', 50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI', 80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE', 70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER', 100.00);

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
INSERT INTO BACKUP.PRODUTO_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR, );
END
$

DELETE FROM PRODUTO WHERE IDPRODUTO = 2

SELECT * FROM BACKUP.PRODUTO_PRODUTO;

DROP TRIGGER BACKUP_PRODUTO;

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
INSERT INTO BACKUP.PRODUTO_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR, 'I');
END
$ 

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#', 50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO JAVA', 80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO RUBY', 70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO JS', 100.00);

ALTER TABLE BACKUP.PRODUTO_PRODUTO ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DEL ;

DELIMITER $
CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
INSERT INTO BACKUP.PRODUTO_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR, 'D');
END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;

INSERT INTO PRODUTO VALUES(NULL,'The lord of rings', 100.00);

/* trigger de auditoria */

DROP DATABASE LOJA;
DROP DATABASE BACKUP;

CREATE DATABASE LOJA; 
USE LOJA; 

 CREATE TABLE PRODUTO(
    IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#', 50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO JAVA', 80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO RUBY', 70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO JS', 100.00);

CREATE DATABASE BACKUP;

USE BACKUP;

SELECT NOW();
SELECT CURRENT_USER();

CREATE TABLE BKP_PRODUTO(
    IDBKP INT  PRIMARY KEY AUTO_INCREMENT,
    IDPRODUTO INT,
    NOME VARCHAR(30),
    VALOR_ORIGINAL FLOAT(10,2),
    VALOR_ALTERADO FLOAT(10,2),
    DATA DATETIME,
    USUÁRIO VARCHAR(30),
    EVENTO CHAR(1)
);

DELIMITER $
CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO BACKUP.BKP_PRODUTO 
    VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR, NEW.VALOR, NOW(), CURRENT_USER(), 'U');
END
$

UPDATE PRODUTO SET VALOR = 100.00 WHERE IDPRODUTO = 1;